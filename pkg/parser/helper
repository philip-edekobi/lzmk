
// import (
// 	"fmt"
// )
//
// var lineCount = 0
//
// // func eatSpaces(input string, pos int) int {
// // 	char, nextPos := advance(input, pos)
// //
// // 	if char == ' ' {
// // 		return eatSpaces(input, nextPos)
// // 	}
// //
// // 	return nextPos - 1
// // }
//
// func lexTitleHash(input string, pos int) (*Token, int, error) {
// 	// char, nextPos := advance(input, pos)
// 	char := '.'
// 	nextPos := 0
//
// 	if char != '#' {
// 		return nil, nextPos - 1, fmt.Errorf(
// 			":expected blog to start with title %d:%d",
// 			lineCount+1,
// 			nextPos-1,
// 		)
// 	}
//
// 	return &Token{
// 		kind:  TitleHash,
// 		value: string(char),
// 		row:   lineCount + 1,
// 		col:   pos,
// 	}, nextPos, nil
// }
//
// func lexTitle(input string) ([]*Token, int, error) {
// 	tokens := []*Token{}
// 	currPos := 0
//
// 	toke, nextPos, err := lexTitleHash(input, currPos)
// 	if err != nil {
// 		return tokens, nextPos, err
// 	}
// 	tokens = append(tokens, toke)
//
// 	// nextPos = eatSpaces(input, nextPos)
// 	// next := peek(input, nextPos)
// 	// if next == '\n' || next == '#' {
// 	// 	return nil, nextPos - 1, fmt.Errorf(":expected a title value %d:%d", lineCount+1, nextPos-1)
// 	// }
//
// 	// titleToken, nextPos, err := lexMultiString(input, nextPos)
// 	if err != nil {
// 		return nil, nextPos, err
// 	}
// 	// tokens = append(tokens, titleToken)
//
// 	return tokens, nextPos, nil
// }
//
// func lexBody(input string, pos int) ([]*Token, int, error) {
// 	tokens := []*Token{}
// 	nextPos := 5 // remove this line
//
// 	return tokens, nextPos - 1, nil
// }
